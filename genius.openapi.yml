openapi: 3.0.4
info:
  title: Genius Incentizap | OpenAPI 3.0
  description: Documentação para utilização da API Genius para o Incentizap
  contact:
    email: igor.ferraz@eaimkt.com.br
  version: 1.0.12
servers:
  - url: https://www.multikc.com.br/incentizap/api
tags:
  - name: Autenticação
    description: Métodos para autenticação
  - name: Participantes
    description: Métodos de participantes
  - name: Campanhas
    description: Métodos de campanhas
  - name: Menus
    description: Métodos de menus
  - name: Fale Conosco
    description: Métodos de fale conosco
  - name: KPIs
    description: Métodos de KPIs / extrato / desempenho
  - name: Rankings
    description: Métodos de rankings
  - name: Conteúdos
    description: Métodos de conteúdos
  - name: Notícias
    description: Métodos de notícias
  - name: Games
    description: Métodos de games
  - name: Rate limit
    description: Controle de utilização por participante
paths:
  /oAuth2/token:
    post:
      tags:
        - Autenticação
      summary: Obter token de acesso
      description: Obtém o token para acessar métodos protegidos
      operationId: getToken
      requestBody:
        description: Informações de autenticação fornecidas pela EAÍ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
  
  /chatbot/v1/participante/pesquisa:
    get:
      tags:
        - Participantes
      summary: Obter um participante pelo telefone e/ou número
      description: |-
        Obtém o <strong>primeiro</strong> participante que satisfaça os critérios.<br>
        É obrigatório informar <strong>ao menos</strong> um parâmetro (telefone e/ou e-mail).
      operationId: getParticipanteSimples
      parameters:
        - name: telefone
          in: query
          description: |-
            Número de telefone com DDD (apenas números).<br>
            Será comparado com ambos os campos: telefone e celular.
          schema:
            type: string
            example: 11988888888
        - name: email
          in: query
          description: E-mail
          schema:
            type: string
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteSimplesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}:
    get:
      tags:
        - Participantes
      summary: Obter um participante pelo id
      description: Obtém um participante pelo id
      operationId: getParticipante
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/saldo-catalogo:
    get:
      tags:
        - Participantes
      summary: Obter o saldo de um participante
      description: Obtém o saldo um participante
      operationId: getParticipanteSaldo
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteSaldoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/campanhas:
    get:
      tags:
        - Campanhas
      summary: Obter campanhas de um participante
      description: Obtém todas as campanhas de um participante
      operationId: getCampanhasByParticipante
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampanhaResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/menus:
    get:
      tags:
        - Menus
      summary: Obter menus de acordo com o participante e campanha
      description: |-
        Obtém os menus de acordo com o participante e campanha.
        
        <strong>Enum de Jornada</strong>:
        1. FaleConosco
        2. FAQ
        3. Extrato
        4. Ranking
        5. Conteudo
        6. Games
        7. Comunicados
        8. Catalogo
        9. Cadastro
        10. Noticias
      operationId: getMenusByParticipante
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/faleconosco:
    get:
      tags:
        - Fale Conosco
      summary: Obter chamados do Fale Conosco de um participante
      description: Obtém chamados do fale conosco de um participante.
      operationId: getChamadosByParticipante
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChamadoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
    post:
      tags:
        - Fale Conosco
      summary: Criar um chamado
      description: Criar um chamado para um participante
      operationId: postChamado
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoRequest'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []

  /chatbot/v1/participante/{participanteId}/faleconosco/{protocolo}:
    get:
      tags:
        - Fale Conosco
      summary: Obter um chamado do fale conosco por protocolo
      description: Obtém um chamado do fale conosco por protocolo
      operationId: getChamado
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: protocolo
          in: path
          description: Protocolo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      security:
        - BearerAuth: []
        
  /faleconosco/assuntos:
    get:
      tags:
        - Fale Conosco
      summary: Obter assuntos do fale conosco
      description: Obtém assuntos do fale conosco
      operationId: getAssuntosFaleConosco
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssuntoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/kpi/filtros:
    get:
      tags:
        - KPIs
      summary: Obter os possíveis filtros do extrato
      description: Obtém os tipos de exibições do extrato
      operationId: getFiltrosKPI
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtratoFiltroResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/kpi/extrato:
    get:
      tags:
        - KPIs
      summary: Obter extrato de um participante
      description: |-
        Obtém extrato de um participante em um determinado período.
        
        <strong>Enum de Exibição</strong>:
          1. Pontuação total
          2. Extrato detalhado
      operationId: getKPIs
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
        - name: exibicao
          in: query
          description: Enum de Exibição
          required: true
          schema:
            type: integer
            description: |-
              1. Pontuação total
              2. Extrato detalhado
            enum: [1, 2]
            x-enum-descriptions:
              - Pontuação total
              - Extrato detalhado
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
        - name: distribuidoraId
          in: query
          description: ID da Distribuidora
          schema:
            type: string
            format: uuid
        - name: lideradoId
          in: query
          description: ID do Liderado
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtratoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/ranking/periodos:
    get:
      tags:
        - Rankings
      summary: Obter os períodos de ranking
      description: Obtém os períodos de ranking disponíveis para a campanha
      operationId: getRankingPeriodos
      parameters:
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingPeriodoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/ranking/filtros:
    get:
      tags:
        - Rankings
      summary: Obter os filtros amigáveis de ranking
      description: Obtém os filtros amigáveis de ranking
      operationId: getRankingFiltros
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingFiltroResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/ranking:
    get:
      tags:
        - Rankings
      summary: Obter o ranqueamento
      description: Obtém o ranqueamento de acordo com a parametrização
      operationId: getRanking
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
        - name: intervaloMeses
          in: query
          description: Intervalo de meses
          required: true
          schema:
            type: integer
        - name: filtroId
          in: query
          description: ID do Filtro
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/conteudo/tipos:
    get:
      tags:
        - Conteúdos
      summary: Obter os tipos de conteúdo
      description: Obtém os tipos de conteúdo
      operationId: getTiposConteudo
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoTipoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/conteudo/tipo/{tipoId}:
    get:
      tags:
        - Conteúdos
      summary: Obter os conteúdos de um tipo
      description: Obtém os conteúdos de um tipo
      operationId: getConteudos
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: tipoId
          in: path
          description: ID do Tipo
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoSimplesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/conteudo/{conteudoId}/tipo/{tipoId}:
    get:
      tags:
        - Conteúdos
      summary: Obter um conteúdo completo
      description: Obtém um conteúdo completo
      operationId: getConteudo
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: conteudoId
          in: path
          description: ID do Conteúdo
          required: true
          schema:
            type: string
            format: uuid
        - name: tipoId
          in: path
          description: ID do Tipo
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ConteudoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/noticias:
    get:
      tags:
        - Notícias
      summary: Obter as notícias com paginação
      description: |-
        Obtém as notícias com paginação.
        
        Para obter a <strong>primeira página</strong>, deve-se enviar <strong>pagina = 0.</strong>
      operationId: getNoticias
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: pagina
          in: query
          description: Página (zero-based)
          required: true
          schema:
            type: integer
        - name: quantidade
          in: query
          description: Quantidade de itens (padrão 5)
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticiaSimplesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
          
  /chatbot/v1/participante/{participanteId}/noticia/{noticiaId}:
    get:
      tags:
        - Notícias
      summary: Obter uma notícia completa
      description: Obtém uma notícia completa
      operationId: getNoticia
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: noticiaId
          in: path
          description: ID da Notícia
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticiaResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/games/fases:
    get:
      tags:
        - Games
      summary: Obter lista de fases de games
      description: |-
        Obtém lista de fases de games de acordo com parametrização
        
        <strong>Enum de Tipo</strong>:
          1. Quiz
          2. Enquete
          
        <strong>Enum de Status</strong>:
          1. Pendente
          2. Respondida
          3. Encerrada
      operationId: getGames
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: tipo
          in: query
          description: Tipo do game
          schema:
            type: integer
            enum: [1, 2]
            x-enum-descriptions:
              - Quiz
              - Enquete
        - name: status
          in: query
          description: Status do game
          schema:
            type: integer
            enum: [1, 2]
            x-enum-descriptions:
              - Quiz
              - Enquete
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameFaseSimplesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
        
  /chatbot/v1/participante/{participanteId}/game/fase/{faseId}:
    get:
      tags:
        - Games
      summary: Obter fase detalhada de um game
      description: |-
        Obtém fase de game de acordo com parametrização.
        
        <strong>Regras gerais:</strong>
        
        - <strong>Perguntas Dissertativas</strong> não possuem lista de <strong>Respostas</strong>.
        - Apenas as <strong>Perguntas</strong> já respondidas tem as <strong>Respostas</strong> corretas sinalizadas.
        - Para validar a <strong>Resposta</strong> do <strong>Participante</strong>, é necessário enviá-la para o endpoint abaixo.
        
        <strong>Enum de Tipo</strong>:
          1. Quiz
          2. Enquete
          
        <strong>Enum de Status</strong>:
          1. Pendente
          2. Respondida
          3. Encerrada
      operationId: getGameFase
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - name: faseId
          in: path
          description: ID da Fase
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameFaseResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
     
  /chatbot/v1/participante/{participanteId}/game/fase/{faseId}/resposta:
    post:
      tags:
        - Games
      summary: Salvar a resposta do participante em uma fase de um game
      description: |-
        Salva a resposta de um Participante em uma Fase de um Game.
        
        - Para <strong>Perguntas</strong> não dissertativas, o endpoint retorna se a <strong>Resposta</strong> está correta.
        - Enviar <strong>respostaDissertativa</strong> para <strong>Perguntas</strong> que sejam dissertativas.
        - Enviar <strong>respostaId</strong> para <strong>Perguntas</strong> que não sejam dissertativas.
      operationId: postGameFase
      parameters:
        - $ref: '#/components/parameters/ParticipanteIdPath'
        - $ref: '#/components/parameters/GameFaseIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameRespostaRequest'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResposta'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
        - BearerAuth: []
      
        
  /chatbot/v1/participante/{participanteId}/sessao:
    post:
      tags:
      - Rate limit
      summary: Iniciar nova sessão para participante
      description: Inicia uma nova sessão para o participante
      parameters:
      - $ref: '#/components/parameters/ParticipanteIdPath'
      responses:
        '201':
          description: Sessão iniciada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InicioSessaoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
      - BearerAuth: []

  /chatbot/v1/participante/{participanteId}/sessao/{sessaoId}/mensagem:
    post:
      tags:
      - Rate limit
      summary: Debitar saldo do participante
      description: |-
        Notifica que o participante mandou uma mensagem, em qual jornada (caso haja) e debita o crédito.
        
        <strong>Enum de Jornada (null se ainda não houver)</strong>:
        1. FaleConosco
        2. FAQ
        3. Extrato
        4. Ranking
        5. Conteudo
        6. Games
        7. Comunicados
        8. Catalogo
        9. Cadastro
        10. Noticias
      parameters:
      - $ref: '#/components/parameters/ParticipanteIdPath'
      - $ref: '#/components/parameters/SessaoIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MensagemRequest'
      responses:
        '200':
          description: Mensagem processada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensagemResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      security:
      - BearerAuth: []
          
components:
  schemas:
    Telefone:
      type: string
      pattern: '^[1-9]{2}9?[0-9]{8}$'
      example: '11988888888'
      description: Número com DDD (somente números) (dígito 9 obrigatório para celulares)
      
    Endereco:
      type: object
      properties:
        rua:
          type: string
          description: Logradouro
        numero:
          type: string
          description: Número
        complemento:
          type: string
          description: Complemento
        cep:
          type: string
          description: CEP
        bairro:
          type: string
          description: Bairro
        cidade:
          type: string
          description: Cidade
        uf:
          type: string
          description: UF
      
    TokenRequest:
      type: object
      properties:
        grantType:
          type: string
          example: client_credentials
          description: Tipo de autenticação (constante)
        clientId:
          type: string
          format: uuid
          description: ClientId (fornercido pela EAÍ)
        clientSecret:
          type: string
          description: ClientSecret (fornecido pela EAÍ)
          
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: AccessToken
        tokenType:
          type: string
          description: Tipo do token (Constante)
          example: Bearer
        expiresIn:
          type: integer
          description: Em quantos segundos o AccessToken expirará
          example: 1800
          
    ParticipanteSimplesResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
          example: Nome Completo
        telefone:
          $ref: '#/components/schemas/Telefone'
        celular:
          $ref: '#/components/schemas/Telefone'
          
    ParticipanteResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
          example: Nome Completo
        telefone:
          $ref: '#/components/schemas/Telefone'
        celular:
          $ref: '#/components/schemas/Telefone'
        email:
          type: string
          description: E-mail
          format: email
        endereco:
          $ref: '#/components/schemas/Endereco'
          
    ParticipanteSaldoResponse:
      type: object
      properties:
        sucesso:
          type: boolean
          description: Sucesso
        mensagem:
          type: string
          description: Mensagem
        saldo:
          type: number
          format: decimal
          description: Saldo
        habilitado:
          type: boolean
          description: Habilitado
          
    CampanhaResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
        subtitulo:
          type: string
          description: Subtitulo
        descricao:
          type: string
          description: Descrição
        padrao:
          type: boolean
          description: Padrão
        ordem:
          type: integer
          description: Ordenação
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - Em andamento
            - Fechada
            - Em breve
          
    MenuResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
        ordem:
          type: integer
          description: Ordenação
        jornada:
          type: integer
          description: |-
            Enum de Jornada
            1. FaleConosco
            2. FAQ
            3. Extrato
            4. Ranking
            5. Conteudo
            6. Games
            7. Comunicados
            8. Catalogo
            9. Cadastro
            10. Noticias
          enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          x-enum-descriptions:
            - FaleConosco
            - FAQ
            - Extrato
            - Ranking
            - Conteudo
            - Games
            - Comunicados
            - Catalogo
            - Cadastro
            - Noticias
            
    ChamadoResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        protocolo:
          type: string
          description: Protocolo
        assunto:
          type: string
          description: Assunto
        mensagem:
          type: string
          description: Mensagem
        ultimaResposta:
          type: string
          description: Mensagem
        status:
          type: string
          description: Status
          enum:
            - Pendente
            - Resolvido
            - Em Andamento
        dataInclusao:
          type: string
          description: Data de inclusão
          format: date-time
    
    ChamadoRequest:
      type: object
      properties:
        mensagem:
          type: string
          description: Mensagem
        assuntoId:
          type: string
          description: ID do Assunto
          format: uuid
        participanteId:
          type: string
          description: ID do Participante
          format: uuid
          
    AssuntoResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        assunto:
          type: string
          description: Assunto
          
    ExtratoResponse:
      type: object
      properties:
        texto:
          type: string
          description: Nome
        ordem:
          type: integer
          description: Ordenação
          
    Distribuidora:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        cnpj:
          type: string
          description: CNPJ
    
    Ano:
      type: object
      properties:
        ano:
          type: integer
          description: Ano
        meses:
          type: array
          items:
            type: integer
            
    Liderado:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        cpf:
          type: string
          description: CPF
    
    ExtratoFiltroResponse:
      type: object
      properties:
        distribuidoras:
          type: array
          items:
            $ref: '#/components/schemas/Distribuidora'
        liderados:
          type: array
          items:
            $ref: '#/components/schemas/Liderado'
        anos:
          type: array
          items:
            $ref: '#/components/schemas/Ano'
          
    RankingPeriodoResponse:
      type: object
      properties:
        intervaloMeses:
          type: integer
          description: Quantidade de meses no período
        nome:
          type: string
          description: Nome
          
    RankingFiltroResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
          
    RankingResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        posicao:
          type: integer
          description: Posição
        pontos:
          type: integer
          description: Pontos
        realizado:
          type: number # decimal
          description: Realizado (decimal)
        usuarioAutenticado:
          type: boolean
          description: Resultado do usuário autenticado
        nomeParticipante:
          type: string
          description: Nome do participante
          
    ConteudoTipoResponse:
      type: object
      properties:
        id:
          type: integer
          description: Identificador único
        nome:
          type: string
          description: Nome
          
    ConteudoSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        tipoId:
          type: integer
          description: ID do Tipo
        descricao:
          type: string
          description: Descrição
        ordem:
          type: integer
          description: Ordenação
    
    ConteudoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        tipoId:
          type: integer
          description: ID do Tipo
        nome:
          type: string
          description: Nome
        descricao:
          type: string
          description: Descrição
        imagemUrl:
          type: string
          description: URL da imagem
          
    NoticiaSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        titulo:
          type: string
          description: Título
        dataPublicacao:
          type: string
          format: date-time
          description: Data de publicação
          
    NoticiaResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        titulo:
          type: string
          description: Título
        conteudo:
          type: string
          description: Conteúdo (HTML)
        imagemUrl:
          type: string
          description: URL da imagem
        dataPublicacao:
          type: string
          format: date-time
          description: Data de publicação
        categorias:
          type: array
          items:
            type: string
            
    GameSimples:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        descricao:
          type: string
          description: Descrição
        tipo:
          type: integer
          description: Tipo (Enum)
          enum: [1, 2]
          x-enum-descriptions:
            - Quiz
            - Enquete
        usarVidas:
          type: boolean
          description: Usa vida
          
    GamePergunta:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          description: ID da Pergunta
        pergunta:
          type: string
          description: Pergunta
        dissertativa:
          type: boolean
          description: Dissertativa
        respondida:
          type: boolean
          description: Respondida
        respostaDissertativa:
          type: string
          description: Resposta dissertativa
        respostas:
          type: array
          items:
            $ref: '#/components/schemas/GameResposta'
          
    GameResposta:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID da Resposta
        correta:
          type: boolean
          description: Correta
        perguntaId:
          type: string
          format: uuid
          description: ID da Pergunta
        respondidaEm:
          type: string
          format: date-time
          description: Data de inclusão
          
    GameRespostaRequest:
      type: object
      description: 'Enviar apenas um: respostaId OU respostaDissertativa'
      properties:
        perguntaId:
          type: string
          format: uuid
          description: ID da Pergunta
        respostaId:
          type: string
          format: uuid
          description: ID da Resposta
        respostaDissertativa:
          type: string
          description: Resposta Dissertativa
            
    GameFaseSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        ordem:
          type: number
          description: Ordenação
        status:
          type: integer
          description: Status (Enum)
          enum: [1, 2]
          x-enum-descriptions:
            - Pendente
            - Respondida
            - Encerrada
        dataInicio:
          type: string
          format: date-time
          description: Data inicial
        dataFim:
          type: string
          format: date-time
          description: Data final
        imagemUrl:
          type: string
          description: URL da imagem
        game:
          $ref: '#/components/schemas/GameSimples'
          
    GameFaseResponse:
      allOf:
        - $ref: '#/components/schemas/GameFaseSimplesResponse'
      type: object
      properties:
        perguntas:
          type: array
          items:
            $ref: '#/components/schemas/GamePergunta'
      
          
    InicioSessaoResponse:
      type: object
      properties:
        sessaoId:
          type: string
          format: uuid
        creditosRestantes:
          type: integer
          example: 10
        creditosExtrasRestantes:
          type: integer
          example: 3
        renovaEm:
          type: string
          format: date-time
      required:
      - sessaoId
      - estado
      
    MensagemRequest:
      type: object
      properties:
        mensagem:
          type: string
          example: Mensagem enviada pelo participante
        jornada:
          type: integer
          description: |-
            Enum de Jornada
            1. FaleConosco
            2. FAQ
            3. Extrato
            4. Ranking
            5. Conteudo
            6. Games
            7. Comunicados
            8. Catalogo
            9. Cadastro
            10. Noticias
          enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          x-enum-descriptions:
            - FaleConosco
            - FAQ
            - Extrato
            - Ranking
            - Conteudo
            - Games
            - Comunicados
            - Catalogo
            - Cadastro
            - Noticias
      required:
      - mensagem
      
    MensagemResponse:
      type: object
      properties:
        permiteContinuar:
          type: boolean
          example: true
        creditosRestantes:
          type: integer
          example: 9
        creditosExtrasRestantes:
          type: integer
          example: 20
      required:
        - permiteContinuar
        - creditosRestantes
        - creditosExtrasRestantes
        
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        codigo:
          type: string
          example: 'BAD_REQUEST ou SALDO_INSUFICIENTE'
          enum:
            - BAD_REQUEST
            - SALDO_INSUFICIENTE
        mensagem:
          type: string
        urlRedirecionamento:
          type: string
        detalhes:
          type: object
          description: 'Objeto dinâmico com detalhes do erro'
        
  responses:
    ForbiddenResponse:
      description: 'Acesso negado por créditos insuficientes'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/ForbiddenExample'
          
    BadRequestResponse:
      description: 'Requisição inválida'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/BadRequestExample'
    
    UnauthorizedResponse:
      description: 'Não autorizado'
      
    NotFoundResponse:
      description: 'Não encontrado'
   
  examples:
    BadRequestExample:
      value:
        status: 400
        codigo: 'BAD_REQUEST'
        mensagem: 'Requisição inválida'
        urlRedirecionamento: null
        detalhes: {
          "propriedade1": "Este campo é obrigatório.",
          "propriedade2": "Valor informado é inválido."
        }
        
    ForbiddenExample:
      value:
        status: 403
        codigo: 'SALDO_INSUFICIENTE'
        mensagem: 'Saldo insuficiente.'
        urlRedirecionamento: null
        detalhes: {}
      
  parameters:
    ParticipanteIdPath:
        name: participanteId
        in: path
        description: ID do Participante
        required: true
        schema:
          type: string
          format: uuid
          
    GameFaseIdPath:
      name: faseId
      in: path
      description: ID da Fase
      required: true
      schema:
        type: string
        format: uuid
          
    SessaoIdPath:
      name: sessaoId
      in: path
      description: ID da Sessão
      required: true
      schema:
        type: string
          
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
